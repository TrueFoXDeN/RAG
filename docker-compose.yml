version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - '6333:6333'
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - rag_network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: Mastermind1324
    command: server /data --console-address ":9001"
    networks:
      - rag_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Mastermind1324
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - rag_network

  postgres:
    image: postgres:13
    container_name: keycloak_postgres
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rag_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Mastermind1324
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command:
      - start-dev
    networks:
      - rag_network
#  api:
#    build: .
#    container_name: api
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
#    networks:
#      - rag_network
#
#  frontend:
#    build: ../RAGFrontend/.
#    container_name: frontend
#    volumes:
#      - ../RAGFrontend/dist/ragfrontend/browser:/app/dist/ragfrontend/browser
#    networks:
#      - rag_network
#
#  proxy:
#    image: nginx:latest
#    container_name: proxy
#    volumes:
#      - ./default.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - "80:80"
#    networks:
#      - rag_network

volumes:
  qdrant_storage:
  minio_data:
  mongo_data:
  postgres_data:

networks:
  rag_network: